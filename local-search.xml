<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>板子</title>
    <link href="/2020/08/03/%E6%9D%BF%E5%AD%90/"/>
    <url>/2020/08/03/%E6%9D%BF%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<h2 id="高精度加法"><a class="markdownIt-Anchor" href="#高精度加法"></a> 高精度加法</h2><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-keyword">int</span> a[<span class="hljs-number">255</span>], b[<span class="hljs-number">255</span>], c[<span class="hljs-number">255</span>];<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;<span class="hljs-built_in">string</span> s1, s2;<span class="hljs-keyword">int</span> la, lb, len;<span class="hljs-comment">/*memset(a, 0, sizeof(a));    </span><span class="hljs-comment">memset(b, 0, sizeof(b));</span><span class="hljs-comment">memset(c, 0, sizeof(c));*/</span><span class="hljs-built_in">cin</span> &gt;&gt; s1 &gt;&gt; s2;la = s1.<span class="hljs-built_in">size</span>();lb = s2.<span class="hljs-built_in">size</span>();<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = la - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) a[la - i - <span class="hljs-number">1</span>] = s1[i] - <span class="hljs-string">&#x27;0&#x27;</span>;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = lb - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) b[lb - i - <span class="hljs-number">1</span>] = s2[i] - <span class="hljs-string">&#x27;0&#x27;</span>;<span class="hljs-keyword">if</span>(la &gt; lb) len = la;<span class="hljs-keyword">else</span> len = lb;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) c[i] = a[i] + b[i];<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++)&#123;c[i + <span class="hljs-number">1</span>] += c[i] / <span class="hljs-number">10</span>;c[i] %= <span class="hljs-number">10</span>;&#125;<span class="hljs-keyword">if</span> (c[len] &gt; <span class="hljs-number">0</span>) len++;<span class="hljs-comment">/*for(int i = 0;i &lt; len;i++) </span><span class="hljs-comment">    std :: cout &lt;&lt; c[i] &lt;&lt; &#x27; &#x27;;</span><span class="hljs-comment">    cout &lt;&lt; endl;</span><span class="hljs-comment">*/</span><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = len - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) <span class="hljs-built_in">cout</span> &lt;&lt; c[i];<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>高精度</title>
    <link href="/2020/08/03/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    <url>/2020/08/03/%E9%AB%98%E7%B2%BE%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="总述-tip-为整除"><a class="markdownIt-Anchor" href="#总述-tip-为整除"></a> 总述 （tip: ÷为整除</h2><h3 id="数据的接收与存储方法"><a class="markdownIt-Anchor" href="#数据的接收与存储方法"></a> 数据的接收与存储方法</h3><p>输入的数值没爆范围时，可用数值型变量来接收。但爆了以后，可采用字符串方式</p><a id="more"></a><ul><li>利用字符串函数和操作运算</li><li>直接用循环加数组 输入数据</li></ul><p><code>数串“字符串”形式输入数据，并将其转化为数组来存储</code></p><h3 id="高精度位数的确定"><a class="markdownIt-Anchor" href="#高精度位数的确定"></a> 高精度位数的确定</h3><p>接收时往往采用字符串，所以它的位数就 = 字符串长度。</p><ol><li>两数之和的位数最大为较大的数的位数+1</li><li>乘积的位数最大为两个因子的位数之和</li><li>阶乘与乘方的位数可以采用对数运算来确定计算结果的位数</li></ol><h3 id="进位处理和借位处理"><a class="markdownIt-Anchor" href="#进位处理和借位处理"></a> 进位处理和借位处理</h3><ul><li>加法的</li></ul><pre><code class="hljs c++">c[i] = a[i] + b[i];<span class="hljs-keyword">if</span> (c[i] &gt;= <span class="hljs-number">10</span>)&#123;    c[i] = c[i] % <span class="hljs-number">10</span>;    c[i + <span class="hljs-number">1</span>] = c[i + <span class="hljs-number">1</span>] + <span class="hljs-number">1</span>;&#125;</code></pre><ul><li>减法的</li></ul><pre><code class="hljs c++"><span class="hljs-keyword">if</span> (a[i] &lt; b[i])&#123;    a[i + <span class="hljs-number">1</span>] -=  <span class="hljs-number">1</span>;    a[i] += <span class="hljs-number">10</span>;&#125;c[i] = a[i] - b[i];</code></pre><ul><li>乘法的</li></ul><pre><code class="hljs c++">c[i + j - <span class="hljs-number">1</span>] = a[i] * b[j] + x + c[i + j - <span class="hljs-number">1</span>];x = c[i + j - <span class="hljs-number">1</span>] / <span class="hljs-number">10</span>;c[i + j - <span class="hljs-number">1</span>] = c[i + j - <span class="hljs-number">1</span>] % <span class="hljs-number">10</span>;</code></pre><ul><li>商和余数</li></ul><p>视被除数和除数的位数情况进行处理</p><ul><li>高精度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">÷</span></span></span></span>单精度 从高位相除取余数</li><li>高精度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">÷</span></span></span></span>高精度 再用高精度减法，再统计相减次数</li></ul><p>存储输出的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">N + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>位数字</p><h3 id="结果的输出"><a class="markdownIt-Anchor" href="#结果的输出"></a> 结果的输出</h3><p>小数点的位置、处理多于的0</p><hr /><h2 id="高精度加法"><a class="markdownIt-Anchor" href="#高精度加法"></a> 高精度加法</h2><p>要解决的问题：</p><ul><li>数据的输入</li><li>数据的存储</li><li>加法运算，注意进位处理</li><li>结果的输出</li></ul><h3 id="高精度数的输入和保存"><a class="markdownIt-Anchor" href="#高精度数的输入和保存"></a> 高精度数的输入和保存</h3><p><code>输入要符合数字的输入规律：连续输入，中间无空格。字符串读入，数组保存。</code></p><pre><code class="hljs c++"><span class="hljs-built_in">string</span> s1, s2;<span class="hljs-keyword">int</span> a[<span class="hljs-number">255</span>], b[<span class="hljs-number">255</span>],c[<span class="hljs-number">255</span>], la;<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>, s1);la = s1.<span class="hljs-built_in">size</span>();<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; la; i++) <span class="hljs-comment">//字符串和字符数组从0定义</span>&#123;    a[i] = s1[la - <span class="hljs-number">1</span> - i] - <span class="hljs-string">&#x27;0&#x27;</span>;&#125;    </code></pre><h3 id="加法运算时的进位"><a class="markdownIt-Anchor" href="#加法运算时的进位"></a> 加法运算时的进位</h3><pre><code class="hljs c++"><span class="hljs-keyword">if</span>(la &gt; lb) len = la;<span class="hljs-keyword">else</span> len = lb; <span class="hljs-comment">//len是较大位数</span>m = <span class="hljs-number">0</span>;<span class="hljs-comment">//进位</span></code></pre><h4 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一：</h4><pre><code class="hljs c++"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++)&#123;c[i] = (a[i] + b[i] + m) % <span class="hljs-number">10</span>;    m = (a[i] + b[i] + m) / <span class="hljs-number">10</span>;&#125;    <span class="hljs-comment">//最后一个进位m的处理</span><span class="hljs-keyword">if</span> (m &gt; <span class="hljs-number">0</span>)<span class="hljs-comment">//m = 1</span>&#123;c[len++] = m;&#125;   </code></pre><h4 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二</h4><pre><code class="hljs c++"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; len; j++)<span class="hljs-comment">//先逐位相加</span>&#123;    c[i] = a[i] + b[i];&#125;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++)<span class="hljs-comment">//从低位依次处理低位</span>&#123;    c[i + <span class="hljs-number">1</span>] = c[i + <span class="hljs-number">1</span>] + c[i] / <span class="hljs-number">10</span>;    c[i] = c[i] % <span class="hljs-number">10</span>;&#125;<span class="hljs-keyword">if</span> (c[len + <span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span>) len = len + <span class="hljs-number">1</span>;<span class="hljs-comment">//进位</span></code></pre><p>​</p><h4 id="方法三"><a class="markdownIt-Anchor" href="#方法三"></a> 方法三</h4><pre><code class="hljs c++">a = a + b;<span class="hljs-comment">//节省空间，省去数组c</span><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++)&#123;    a[i + <span class="hljs-number">1</span>] = a[i + <span class="hljs-number">1</span>] + (a[i] + b[i]) / <span class="hljs-number">10</span>;    a[i] = (a[i] + b[i]) % <span class="hljs-number">10</span>;&#125;<span class="hljs-keyword">if</span> (a[len + <span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span>) len +=  <span class="hljs-number">1</span>; </code></pre><h3 id="运算结果的输出"><a class="markdownIt-Anchor" href="#运算结果的输出"></a> 运算结果的输出</h3><ul><li><p><code>for (int i = len - 1; i &gt;= 0; i--)</code></p></li><li><p><code>for (int i = len - 1; i &gt;= 1; i--)</code></p></li><li><p><code>cout &lt;&lt; c[0]</code></p></li></ul><p>如果数据变态的出了<code>0001</code>和<code>0002</code>这样的话……</p><pre><code class="hljs c++"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = len - <span class="hljs-number">1</span>; j &gt;= <span class="hljs-number">0</span>; j--)&#123;    <span class="hljs-keyword">if</span> (c[j] == <span class="hljs-number">0</span>)        t++;    <span class="hljs-keyword">if</span> (c[j] != <span class="hljs-number">0</span>)        <span class="hljs-keyword">break</span>;&#125;<span class="hljs-keyword">if</span> (t == len) <span class="hljs-comment">//放置判0把答案0删除</span>&#123;    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-number">0</span> &lt;&lt; <span class="hljs-built_in">endl</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = len - <span class="hljs-number">1</span> - t; i &gt;= <span class="hljs-number">0</span>; i--)<span class="hljs-comment">//判0</span>&#123;    <span class="hljs-built_in">cout</span> &lt;&lt; c[i];&#125;</code></pre><hr /><h2 id="高精度减法"><a class="markdownIt-Anchor" href="#高精度减法"></a> 高精度减法</h2><h3 id="需要解决的问题"><a class="markdownIt-Anchor" href="#需要解决的问题"></a> 需要解决的问题</h3><ol><li>比较 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的大小 从而确定结果的正负号</li><li>借位问题</li><li>去掉结果前面多余的0</li></ol><h3 id="具体步骤"><a class="markdownIt-Anchor" href="#具体步骤"></a> 具体步骤</h3><ol><li>比较 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的大小 确定<code>结果的正负号</code> <code>谁减谁</code></li></ol><pre><code class="hljs c++"><span class="hljs-built_in">cin</span> &gt;&gt; s1 &gt;&gt; s2;<span class="hljs-keyword">if</span> (s1 == s2)&#123;    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;0&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;la = length(s1);lb = length(s2);<span class="hljs-keyword">if</span> (la &lt; lb || ((la = lb) &amp;&amp; (s1 &lt; s2)))&#123;    fh = <span class="hljs-string">&#x27;-&#x27;</span>;    s = s1;    s1 = s2;    s2 = s;&#125;la = length(s1);lb = length(s2);len = la;<span class="hljs-comment">//len的长度较大</span></code></pre><ol start="2"><li>借位问题 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mi>a</mi><mo>−</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a = a-b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></li></ol><pre><code class="hljs c++">len = la;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++)&#123;    <span class="hljs-keyword">if</span> (a[i] &lt; b[i])    &#123;        a[i + <span class="hljs-number">1</span>] -= <span class="hljs-number">1</span>;        a[i] += <span class="hljs-number">10</span>;    &#125;    a[i] = a[i] - b[i];&#125;</code></pre><ol start="3"><li>去掉结果前面多余的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li></ol><pre><code class="hljs c++"><span class="hljs-keyword">while</span> (a[len] == <span class="hljs-number">0</span>)&#123;    len--;&#125;</code></pre><h3 id="具体实现"><a class="markdownIt-Anchor" href="#具体实现"></a> 具体实现</h3><pre><code class="hljs c++"><span class="hljs-built_in">string</span> s1, s2, s;<span class="hljs-keyword">int</span> a[<span class="hljs-number">250</span>], b[<span class="hljs-number">250</span>];<span class="hljs-keyword">int</span> la, lb, k;<span class="hljs-keyword">char</span> fh;<span class="hljs-built_in">cin</span> &gt;&gt; s1 &gt;&gt; s2;<span class="hljs-keyword">if</span> (s1 == s2) &#123;<span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;0&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125; <span class="hljs-comment">//特殊条件</span><span class="hljs-keyword">if</span> (la &lt; lb || ((la = lb) &amp;&amp; (s1 &lt; s2)))&#123;fh = <span class="hljs-string">&#x27;-&#x27;</span>;    s = s1;    s1 = s2;    s2 = s;&#125;la = length(s1);lb = length(s2); <span class="hljs-comment">//判断符号 交换长度</span><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; la; i++)&#123;a[i] = s1[la - i - <span class="hljs-number">1</span>] - ‘<span class="hljs-number">48</span>’；&#125;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; lb; j++)&#123;b[j] = s1[lb - j - <span class="hljs-number">1</span>] - ‘<span class="hljs-number">48</span>’；&#125;k = la - <span class="hljs-number">1</span>; <span class="hljs-comment">//初始化</span><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> t = <span class="hljs-number">0</span>; t &lt;= k; t++)&#123;<span class="hljs-keyword">if</span> (a[t] &lt; b[t])    &#123;    a[t + <span class="hljs-number">1</span>] -= <span class="hljs-number">1</span>;        a[t] += <span class="hljs-number">10</span>;    &#125;    a[t] -= b[t];&#125; <span class="hljs-comment">//计算</span><span class="hljs-keyword">while</span> (a[k] == <span class="hljs-number">0</span>)&#123;k--;&#125; <span class="hljs-comment">//除去前导0</span><span class="hljs-keyword">if</span> (fh == <span class="hljs-string">&#x27;-&#x27;</span>) <span class="hljs-built_in">cout</span> &lt;&lt; fh;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> y = k; y &gt;= <span class="hljs-number">0</span>; y--)<span class="hljs-built_in">cout</span> &lt;&lt; a[y]; <span class="hljs-comment">//输出</span><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</code></pre><hr /><h2 id="高精度乘法"><a class="markdownIt-Anchor" href="#高精度乘法"></a> 高精度乘法</h2><h3 id="单精度高精度"><a class="markdownIt-Anchor" href="#单精度高精度"></a> 单精度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">×</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span>高精度</h3><h4 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h4><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 的每一位都单独与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 相乘</li><li>由低到高位依次再处理 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 的进位</li><li>处理最高位</li></ol><h4 id="参考程序"><a class="markdownIt-Anchor" href="#参考程序"></a> 参考程序</h4><pre><code class="hljs c++"><span class="hljs-keyword">int</span> len;<span class="hljs-built_in">string</span> s;<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b, m;<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a[<span class="hljs-number">260</span>];<span class="hljs-built_in">cin</span> &gt;&gt; s &gt;&gt; b;&#123;    <span class="hljs-keyword">if</span> (b == <span class="hljs-number">0</span>) <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-number">0</span> &lt;&lt; <span class="hljs-built_in">endl</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;len = length(s);<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++)    a[i] = s[len - i - <span class="hljs-number">1</span>] - <span class="hljs-string">&#x27;0&#x27;</span>;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; len; j++)    a[j] *= b;<span class="hljs-comment">//逐位乘b</span></code></pre><p>​</p><pre><code class="hljs c++"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt;= len; k++) <span class="hljs-comment">//处理进位</span>&#123;    a[k + <span class="hljs-number">1</span>] += a[k] / <span class="hljs-number">10</span>;    a[k] = a[k] % <span class="hljs-number">10</span>;&#125;m = a[len + <span class="hljs-number">1</span>];<span class="hljs-keyword">while</span> (m)&#123;    len++;    a[len] = m % <span class="hljs-number">10</span>;    m /= <span class="hljs-number">10</span>;&#125;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> y = len; y &gt;= <span class="hljs-number">0</span>; y--)&#123;    <span class="hljs-built_in">cout</span> &lt;&lt; a[y];&#125;</code></pre><hr /><h3 id="高精度times高精度"><a class="markdownIt-Anchor" href="#高精度times高精度"></a> 高精度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span>高精度</h3><h4 id="参考程序1"><a class="markdownIt-Anchor" href="#参考程序1"></a> 参考程序1</h4><pre><code class="hljs c++"><span class="hljs-keyword">int</span> la, lb, len;<span class="hljs-built_in">string</span> s1, s2;<span class="hljs-keyword">int</span> a[<span class="hljs-number">500</span>], b[<span class="hljs-number">500</span>], c[<span class="hljs-number">500</span>];<span class="hljs-built_in">cin</span> &gt;&gt; s1; <span class="hljs-comment">//把数以字符串形式读入</span>la = length(s1);<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= la; i++)&#123;    a[i] = s[la - i] - <span class="hljs-string">&#x27;0&#x27;</span>;&#125;<span class="hljs-built_in">cin</span> &gt;&gt; s2;lb = length(s2);<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= lb; j++)&#123;    b[j] = s[lb - j] - <span class="hljs-string">&#x27;0&#x27;</span>;&#125;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = <span class="hljs-number">1</span>; x &lt;= la; x++)&#123;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> y = <span class="hljs-number">1</span>; y &lt;= lb; y++)    &#123;        c[x + y - <span class="hljs-number">1</span>] = c[x + y - <span class="hljs-number">1</span>] + a[x] * b[y];        c[x + y] += c[x + y - <span class="hljs-number">1</span>] / <span class="hljs-number">10</span>;        c[x + y - <span class="hljs-number">1</span>] = c[x + y - <span class="hljs-number">1</span>] % <span class="hljs-number">10</span>;<span class="hljs-comment">//处理进位</span>    &#125;&#125;len = la + lb;<span class="hljs-keyword">while</span> (len &gt; <span class="hljs-number">1</span> &amp;&amp; c[len] == <span class="hljs-number">0</span>)    len--;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> r = len; r &gt;= <span class="hljs-number">1</span>; r--)    <span class="hljs-built_in">cout</span> &lt;&lt; c[r];</code></pre><hr /><h4 id="参考程序2"><a class="markdownIt-Anchor" href="#参考程序2"></a> 参考程序2</h4><p>​</p><pre><code class="hljs c++"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> la, lb, lc, x;<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a[<span class="hljs-number">1000</span>], b[<span class="hljs-number">1000</span>], c[<span class="hljs-number">1000</span>];<span class="hljs-built_in">string</span> n, m;        <span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m;la = length(n);lb = length(m);    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= la; i++)&#123;    a[la - i + <span class="hljs-number">1</span>] = n[i - <span class="hljs-number">1</span>] - <span class="hljs-string">&#x27;0&#x27;</span>;&#125;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= lb; j++)&#123;    b[lb - i + <span class="hljs-number">1</span>] = m[i - <span class="hljs-number">1</span>] - <span class="hljs-string">&#x27;0&#x27;</span>;&#125;<span class="hljs-comment">//初始化</span>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">1</span>; k &lt;= la; k++)&#123;    x = <span class="hljs-number">0</span>;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> l = <span class="hljs-number">1</span>; l &lt;= lb; l++)<span class="hljs-comment">//a的当前位乘以b的每一位</span>    &#123;        x = a[i] * b[j] + (x / <span class="hljs-number">10</span>) + c[i + j - <span class="hljs-number">1</span>];        c[i + j - <span class="hljs-number">1</span>] = x % <span class="hljs-number">10</span>;    &#125;    c[i + j] = x / <span class="hljs-number">10</span>;&#125;lc = la + lb;</code></pre><h2 id="高精度除法"><a class="markdownIt-Anchor" href="#高精度除法"></a> 高精度除法</h2><h3 id="高精度div单精度"><a class="markdownIt-Anchor" href="#高精度div单精度"></a> 高精度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">÷</span></span></span></span>单精度</h3><pre><code>1. 输入与储存</code></pre><p>单精度可以直接读入，高精度的输入与存储同<code>加法运算</code>，仍用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>存储数的个位</p><pre><code>2. 计算结果的位数</code></pre><p>除法运算的结果的位数<code>最大等于被除数的位数</code></p><pre><code>3. 除法计算以及商与余数的处理参与运算的数据：</code></pre><ul><li><p>1个不变的数：除数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></p></li><li><p>3个变化的数：被除数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>、商 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 和余数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span></p><p>已知被除数（高精度数）存储在数组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>放的是被除数的个位，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>放的是被除数的最高位，根据除法运算的规则，应该从被除数的最高位开始除以除数，采取按位相处的方法</p><p>商 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mo stretchy="false">[</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo stretchy="false">]</mo><mo>÷</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">c[len]=a[len]\div b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></p><p>余数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>=</mo><mi>a</mi><mo stretchy="false">[</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">d=a[len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span> % <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></p><p>将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>×</mo><mn>10</mn><mo>+</mo><mi>a</mi><mo stretchy="false">[</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">d\times 10 + a[len - 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 重新作为被除数，再继续以上步骤，直到被除数（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>） 的每一位都除完为止</p><p>过程如下：</p></li></ul><pre><code class="hljs c++">d = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = len; i &gt;= <span class="hljs-number">1</span>; i--)&#123;    d = d * <span class="hljs-number">10</span> + a[i];    c[i] = d / b;<span class="hljs-comment">//商</span>    d = d % b;<span class="hljs-comment">//余数</span>&#125;</code></pre><hr /><pre><code>4. 结果的输出</code></pre><p>商放在数组 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 中，注意商中要去掉高位的0，确定好输出的位置，余数直接输出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> 即可</p><h4 id="参考程序-2"><a class="markdownIt-Anchor" href="#参考程序-2"></a> 参考程序</h4><pre><code class="hljs c++"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> maxn = <span class="hljs-number">200</span>;<span class="hljs-built_in">string</span> sa;<span class="hljs-comment">//被除数</span><span class="hljs-keyword">int</span> b, d;<span class="hljs-comment">//b为除数，d为余数</span><span class="hljs-keyword">int</span> la, len;<span class="hljs-built_in">cin</span> &gt;&gt; sa &gt;&gt; b;la = length(sa);<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = la; i &gt;= <span class="hljs-number">1</span>; i--)&#123;    a[la - i + <span class="hljs-number">1</span>] = sa[i - <span class="hljs-number">1</span>] - <span class="hljs-string">&#x27;0&#x27;</span>;&#125;len = la;d = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = len; j &gt;= <span class="hljs-number">1</span>; j--)&#123;    d = d * <span class="hljs-number">10</span> + a[i];    c[i] = d / b;<span class="hljs-comment">//商</span>    d = d % b;<span class="hljs-comment">//余数</span>&#125;<span class="hljs-keyword">while</span> (len &gt;= <span class="hljs-number">1</span> &amp;&amp; c[len] == <span class="hljs-number">0</span>)    len--;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = len; k &gt;= <span class="hljs-number">1</span>; k--)&#123;    <span class="hljs-built_in">cout</span> &lt;&lt; c[k];&#125;<span class="hljs-built_in">cout</span> &lt;&lt; d &lt;&lt; <span class="hljs-built_in">endl</span>;</code></pre><p>在做两个<code>高精度数</code>运算时，存储高精度数的数组元素可以不仅仅只保留一个数字，而采取保留<code>多位数</code></p><p>这样，在做运算（特别是乘法运算）时，可以减少很多操作次数</p><h3 id="高精度div高精度"><a class="markdownIt-Anchor" href="#高精度div高精度"></a> 高精度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">÷</span></span></span></span>高精度</h3><ol><li>输入与储存</li></ol><p>高精度的输入与存储同<code>加法运算</code>，仍用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>存储数的个位</p><ol start="2"><li>计算结果的位数</li></ol><p>除法运算的结果的位数<code>最大等于被除数的位数</code></p><ol start="3"><li><p>除法计算</p><p>可采用循环相减的方法，利用高精度减法来实现</p><ul><li>初始化余数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>,将被除数的最高位 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[len]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span> 的值赋给余数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> 的第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 位 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">d[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span></li><li>比较余数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> 和除数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的大小。<ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>&lt;</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">d &lt; b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> ：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>×</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">d\times 10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>（高精度乘法），并将被除数的下一个取数（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[len - 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>）再赋给余数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">d[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>≥</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">d\geq b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> ：跳出这步，继续</li></ul></li><li>计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>=</mo><mi>d</mi><mo>−</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">d=d-b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>（高精度减法）,并将商<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>的当前位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">c[i] + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ,判断是否<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>≥</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">d\geq b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span><ul><li>是：继续上一步</li><li>否：得到商的一位</li></ul></li><li>返回第二步，继续</li><li>直至将被除数a的所有数取完并求减法结束为止</li></ul></li></ol><h4 id="参考程序-3"><a class="markdownIt-Anchor" href="#参考程序-3"></a> 参考程序</h4><pre><code class="hljs c++"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> maxn = <span class="hljs-number">200</span>;<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">hp</span></span><span class="hljs-class">&#123;</span>    <span class="hljs-keyword">int</span> len, s[maxn];&#125;;<span class="hljs-comment">//结构体在全局里？如何初始化？？？</span><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">hp</span> <span class="hljs-title">y</span>, <span class="hljs-title">w</span>, <span class="hljs-title">x</span>[2];</span><span class="hljs-comment">//x:x[1]被除数，x[2]除数；y商；w余数</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-keyword">const</span> struct hp p)</span><span class="hljs-comment">//const???</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = p.len; i &gt;= <span class="hljs-number">1</span>; i--)    &#123;        <span class="hljs-built_in">cout</span> &lt;&lt; p.s[i];    &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-built_in">string</span> st;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">2</span>; j++)    &#123;        <span class="hljs-built_in">cin</span> &gt;&gt; st;<span class="hljs-comment">//读入数串：j = 1时读入被除数，j = 2时读入除数</span>        x[j].len = length(st);        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= x[j].len; i++)<span class="hljs-comment">//存入数组</span>        &#123;            x[j].s[i] = st[x[j].len - i] - <span class="hljs-string">&#x27;0&#x27;</span>;        &#125;    &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">sub</span><span class="hljs-params">(struct hp a, struct hp b, struct hp c)</span><span class="hljs-comment">//高精度减法 c = a - b</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">int</span> len;    <span class="hljs-keyword">if</span> (a.len &gt; b.len)        len = a.len;    <span class="hljs-keyword">else</span> len = b.len;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= len; i++)    &#123;        c.s[i] += a.s[i] - b.s[i];        <span class="hljs-keyword">if</span> (c.s[i] &lt; <span class="hljs-number">0</span>)        &#123;            c.s[i] += <span class="hljs-number">10</span>;            c.s[i + <span class="hljs-number">1</span>]--;        &#125;    &#125;    <span class="hljs-keyword">while</span> (len &gt; <span class="hljs-number">1</span> &amp;&amp; c.s[len] == <span class="hljs-number">0</span>) len--; <span class="hljs-comment">//去高位的0</span>    c.len = len;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">compare</span><span class="hljs-params">(<span class="hljs-keyword">const</span> struct hp a, <span class="hljs-keyword">const</span> struct hp b)</span><span class="hljs-comment">//比较</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">int</span> len;    <span class="hljs-keyword">if</span> (a.len &gt; b.len) len = a.len;    <span class="hljs-keyword">else</span> len = b.len;    <span class="hljs-keyword">while</span>(len &gt; <span class="hljs-number">0</span> &amp;&amp; a.s[len] = b.s[len]) len--;    <span class="hljs-keyword">if</span> (len == <span class="hljs-number">0</span>)        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> (a.s[len] - b.s[len]);&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mul</span><span class="hljs-params">(struct hp a)</span><span class="hljs-comment">//高精度乘法 a *= 10</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = a.len; i &gt;= <span class="hljs-number">1</span>; i--)        a.s[i + <span class="hljs-number">1</span>] = a.[i];    a.s[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<span class="hljs-comment">//千万别忘！！！</span>    a.len++;    <span class="hljs-keyword">while</span> (a.len &gt; <span class="hljs-number">1</span> &amp;&amp; a.s[a.len] == <span class="hljs-number">0</span>)        a.len--;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">div</span><span class="hljs-params">(struct hp a, struct hp b)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">int</span> len;    <span class="hljs-built_in">memset</span> (c, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(c));    len = a.len;    <span class="hljs-built_in">memset</span> (d, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(d));    d.len = <span class="hljs-number">1</span>;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = len; i &gt;= <span class="hljs-number">1</span>; i--)    &#123;        mul(d);<span class="hljs-comment">//余数*10</span>        d.s[<span class="hljs-number">1</span>] = a.s[<span class="hljs-number">1</span>];<span class="hljs-comment">//被除数的当前位赋给余数的第一位</span>        <span class="hljs-keyword">while</span> (compare(d, b) &gt;= <span class="hljs-number">0</span>)        &#123;            sub(d, b, d);<span class="hljs-comment">//高精度减法：余数d = 余数d - 除数b</span>            c.s[i]++;<span class="hljs-comment">//商c当前位+1</span>        &#125;    &#125;    <span class="hljs-keyword">while</span> (len &gt; <span class="hljs-number">1</span> &amp;&amp; c.s[len] == <span class="hljs-number">0</span>) len--;    c.len = len;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    init();    div(x[<span class="hljs-number">1</span>], x[<span class="hljs-number">2</span>], y, w);    <span class="hljs-built_in">print</span>(y);    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-built_in">endl</span>;    <span class="hljs-built_in">print</span>(w);    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-built_in">endl</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Summer Cozy Rock</title>
    <link href="/2020/08/02/1/"/>
    <url>/2020/08/02/1/</url>
    
    <content type="html"><![CDATA[<p>Hello!Harujeon!</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
